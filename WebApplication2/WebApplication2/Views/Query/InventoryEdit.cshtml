@model WebApplication2.Models.Inventory

@{
    ViewBag.Title = "InventoryEdit";

    List<SelectListItem> list = new List<SelectListItem>() { new SelectListItem() { Text = "--請選擇--", Value = "0" } };
}

<div class="card shadow">
    <div class="card-header">
        <h2>庫存編輯</h2>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.InventoryID)

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductID, "產品名稱", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("ProductID", list, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MilliliterID, "容量", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("MilliliterID", list, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MilliliterID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity,"庫存量", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShelfID, "貨架位置", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownList("ShelfID", list, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ShelfID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-warning btnpr"><span class="fa fa-save"></span>儲存</button>
                        @Html.ActionLink("取消", "InventoryQuery",null,new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div>
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //$('#DDL_Category').change(function () {
        //    let categoryid = $(this).val();
        //    ProductData(categoryid);
        //})

        function ProductData() {
            $.post("@Url.Action("GetProduct", "Query")",
                function (datas) {
                    $('#ProductID').empty();
                    
                        $.each(datas, function (Idx, data) {
                            var op = $('<option></option>');
                            op.text(data.ProductName);
                            op.val(data.ProductID);
                            $('#ProductID').append(op);
                        })
                            $('#ProductID option[value="@Model.ProductID"]').attr('selected', true);
                    
                })
        }

        function MillilterData() {
            $.post("@Url.Action("GetMillilter", "Query")", function (datas) {
                if (data != null) {
                    $.each(datas, function (Idx, data) {
                        var op = $('<option></option>');
                        op.text(data.MilliliterName);
                        op.val(data.MilliliterID);
                        $('#MilliliterID').append(op);
                    })
                    $('#MilliliterID option[value="@Model.MilliliterID"]').attr('selected', true);
                }
            })
        }

        function ShelfData() {
            $.post("@Url.Action("GetShelf", "Query")", function (datas) {
                if (data != null) {
                    $.each(datas, function (Idx, data) {
                        var op = $('<option></option>');
                        op.text(data.ShelfPosition);
                        op.val(data.ShelfID);
                        $('#ShelfID').append(op);
                    })
                    $('#ShelfID option[value="@Model.ShelfID"]').attr('selected', true);
                }
            })
        }

        @*function CategoryData() {
            $.getJSON("@Url.Action("GetCategory", "Query")", function (datas) {
                $.each(datas, function (Idx, data) {
                    var op = $('<option></option>');
                    op.text(data.CategoryName);
                    op.val(data.CategoryID);
                    $('#DDL_Category').append(op);
                })
            })
        }*@

        $(function () {
            //CategoryData();
            ProductData();
            MillilterData();
            ShelfData();


        })
    </script>
}
